apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: argocd-k8s.core.modules.krateo.io
  labels:
    platform: kubernetes
spec:
  compositeTypeRef:
    apiVersion: core.modules.krateo.io/v1
    kind: argo-cd
  resources:
    - base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: ProviderConfig
        spec:
          credentials:
            source: InjectedIdentity
      patches:
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-provider-helm-pc-in"
      readinessChecks:
        - type: None
    - base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: Release
        metadata:
          annotations:
            crossplane.io/external-name: argocd-server
        spec:
          forProvider:
            chart:
              name: argo-cd
              repository: https://argoproj.github.io/argo-helm
              version: 4.9.8
            namespace: krateo-system
            skipCreateNamespace: true
            values:
              server:
                name: ""
                extraArgs:
                  - --insecure
                rbacConfig:
                  policy.default: "role:admin"
                config:
                  accounts.krateo-dashboard: apiKey, login
                  accounts.krateo-dashboard.enabled: "true"
                resources:
                  limits:
                    cpu: 100m
                    memory: 128Mi
                  requests:
                    cpu: 50m
                    memory: 64Mi
              controller:
                resources:
                  limits:
                    cpu: 500m
                    memory: 512Mi
                  requests:
                    cpu: 250m
                    memory: 256Mi
              dex:
                resources:
                  limits:
                    cpu: 50m
                    memory: 64Mi
                  requests:
                    cpu: 10m
                    memory: 32Mi
              redis:
                resources:
                  limits:
                    cpu: 200m
                    memory: 128Mi
                  requests:
                    cpu: 100m
                    memory: 64Mi
              repoServer:
                resources:
                  limits:
                    cpu: 50m
                    memory: 128Mi
                  requests:
                    cpu: 10m
                    memory: 64Mi
      patches:
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-release-argocd"
        - fromFieldPath: "spec.argo-cd.version"
          toFieldPath: "spec.forProvider.chart.version"
        - fromFieldPath: metadata.name
          toFieldPath: spec.providerConfigRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-provider-helm-pc-in"
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: spec.protocol
              - fromFieldPath: spec.argo-cd.hostname
              - fromFieldPath: spec.domain
            strategy: string
            string:
              fmt: "%s://%s.%s"
          toFieldPath: spec.forProvider.values.ingress.hosts[0]
        - fromFieldPath: spec.namespace
          toFieldPath: spec.forProvider.namespace
    - base:
        apiVersion: pkg.crossplane.io/v1alpha1
        kind: ControllerConfig
        spec:
          args:
            - --debug
          securityContext: {}
          podSecurityContext: {}
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 64Mi
      patches:
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-provider-argocd-endpoint-cc"
      readinessChecks:
        - type: None
    - base:
        apiVersion: argocd.krateo.io/v1alpha1
        kind: ProviderConfig
        spec:
          serverUrl: http://argocd-server.krateo-system.svc:80
          credentials:
            source: Secret
            secretRef:
              namespace: krateo-system
              name: argocd-initial-admin-secret
              key: password
          debugClient: true
      patches:
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-provider-argocd-endpoint-pc"
        - fromFieldPath: spec.namespace
          toFieldPath: spec.credentials.secretRef.namespace
        - fromFieldPath: spec.namespace
          toFieldPath: spec.serverUrl
          transforms:
            - type: string
              string:
                fmt: "http://argocd-server.%s.svc:80"
      readinessChecks:
        - type: None
    - base:
        apiVersion: argocd.krateo.io/v1alpha1
        kind: Endpoint
        metadata:
          name: argocd-endpoint
        spec:
          forProvider:
            account: krateo-dashboard
            writeSecretToRef:
              name: argocd-endpoint
              namespace: krateo-system
      patches:
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-argocd-endpoint"
        - fromFieldPath: metadata.name
          toFieldPath: spec.providerConfigRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-provider-argocd-endpoint-pc"
        - fromFieldPath: metadata.name
          toFieldPath: spec.controllerConfigRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-provider-argocd-endpoint-cc"
        - fromFieldPath: spec.namespace
          toFieldPath: spec.forProvider.writeSecretToRef.namespace
