---
apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: core.modules.krateo.io
spec:
  compositeTypeRef:
    apiVersion: modules.krateo.io/v1
    kind: Core
  resources:
    - base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: ProviderConfig
        spec:
          credentials:
            source: InjectedIdentity
      patches:
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-provider-helm-pc-in"
      readinessChecks:
        - type: None
    - base:
        apiVersion: core.modules.krateo.io/v1
        kind: argo-cd
        spec:
          argo-cd:
            version: 5.6.6
      patches:
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-argocd"
        - fromFieldPath: spec.protocol
          toFieldPath: spec.protocol
        - fromFieldPath: spec.domain
          toFieldPath: spec.domain
        - fromFieldPath: spec.argo-cd.version
          toFieldPath: spec.argo-cd.version
        - fromFieldPath: spec.argo-cd.hostname
          toFieldPath: spec.argo-cd.hostname
        - fromFieldPath: spec.argo-cd.service.http.port
          toFieldPath: spec.argo-cd.service.http.port
        - fromFieldPath: metadata.labels
          toFieldPath: metadata.labels
        - fromFieldPath: spec.platform
          toFieldPath: spec.compositionSelector.matchLabels.platform
        - fromFieldPath: spec.namespace
          toFieldPath: spec.namespace
    - base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: Release
        metadata:
          annotations:
            crossplane.io/external-name: dashboard-common-chart
        spec:
          forProvider:
            chart:
              name: dashboard-common-chart
              repository: https://charts.krateo.io
              version: 1.1.15
            namespace: krateo-system
            # values:
            #   services:
            #     hosts:
            #       auth: "http://auth-service-service.krateo-system.svc"
            #       deployment: "http://deployment-service-service.krateo-system.svc"
            #       template: "http://template-service-service.krateo-system.svc"
            #       endpoint: "http://endpoint-service-service.krateo-system.svc"
            #       git: "http://git-service-service.krateo-system.svc"
            #       argocd: "http://argocd-service-service.krateo-system.svc"
            #       log: "http://log-service-service.krateo-system.svc"
            #       socket: "http://socket-service-service.krateo-system.svc"
            #       kubernetes: "http://kubernetes-service-service.krateo-system.svc"
            #       codequality: "http://codequality-service-service.krateo-system.svc"
            #       pipeline: "http://pipeline-service-service.krateo-system.svc"
            #       secret: "http://secret-service-service.krateo-system.svc"
            #       provider: "http://provider-service-service.krateo-system.svc"
            #       capi: "http://capi-service-service.krateo-system.svc"
            #       keptn: ""
            # set:
            #   - name: mongodb.password
            #     valueFrom:
            #       secretKeyRef:
            #         name: krateo-mongodb
            #         namespace: krateo-system
            #         key: mongodb-passwords
      patches:
        - fromFieldPath: spec.dashboard-common-chart.version
          toFieldPath: spec.forProvider.chart.version
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-release-dashboard-common-chart"
        - fromFieldPath: metadata.name
          toFieldPath: spec.providerConfigRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-provider-helm-pc-in"
        - fromFieldPath: spec.namespace
          toFieldPath: spec.forProvider.namespace
        # - fromFieldPath: spec.namespace
        #   toFieldPath: spec.forProvider.set[0].valueFrom.secretKeyRef.namespace
        # - fromFieldPath: spec.namespace
        #   toFieldPath: spec.forProvider.values.services.hosts.auth
        #   transforms:
        #     - type: string
        #       string:
        #         fmt: "http://auth-service-service.%s.svc"
        # - fromFieldPath: spec.namespace
        #   toFieldPath: spec.forProvider.values.services.hosts.deployment
        #   transforms:
        #     - type: string
        #       string:
        #         fmt: "http://deployment-service-service.%s.svc"
        # - fromFieldPath: spec.namespace
        #   toFieldPath: spec.forProvider.values.services.hosts.template
        #   transforms:
        #     - type: string
        #       string:
        #         fmt: "http://template-service-service.%s.svc"
        # - fromFieldPath: spec.namespace
        #   toFieldPath: spec.forProvider.values.services.hosts.endpoint
        #   transforms:
        #     - type: string
        #       string:
        #         fmt: "http://endpoint-service-service.%s.svc"
        # - fromFieldPath: spec.namespace
        #   toFieldPath: spec.forProvider.values.services.hosts.git
        #   transforms:
        #     - type: string
        #       string:
        #         fmt: "http://git-service-service.%s.svc"
        # - fromFieldPath: spec.namespace
        #   toFieldPath: spec.forProvider.values.services.hosts.argocd
        #   transforms:
        #     - type: string
        #       string:
        #         fmt: "http://argocd-service-service.%s.svc"
        # - fromFieldPath: spec.namespace
        #   toFieldPath: spec.forProvider.values.services.hosts.log
        #   transforms:
        #     - type: string
        #       string:
        #         fmt: "http://log-service-service.%s.svc"
        # - fromFieldPath: spec.namespace
        #   toFieldPath: spec.forProvider.values.services.hosts.socket
        #   transforms:
        #     - type: string
        #       string:
        #         fmt: "http://socket-service-service.%s.svc"
        # - fromFieldPath: spec.namespace
        #   toFieldPath: spec.forProvider.values.services.hosts.kubernetes
        #   transforms:
        #     - type: string
        #       string:
        #         fmt: "http://kubernetes-service-service.%s.svc"
        # - fromFieldPath: spec.namespace
        #   toFieldPath: spec.forProvider.values.services.hosts.codequality
        #   transforms:
        #     - type: string
        #       string:
        #         fmt: "http://codequality-service-service.%s.svc"
        # - fromFieldPath: spec.namespace
        #   toFieldPath: spec.forProvider.values.services.hosts.pipeline
        #   transforms:
        #     - type: string
        #       string:
        #         fmt: "http://pipeline-service-service.%s.svc"
        # - fromFieldPath: spec.namespace
        #   toFieldPath: spec.forProvider.values.services.hosts.secret
        #   transforms:
        #     - type: string
        #       string:
        #         fmt: "http://secret-service-service.%s.svc"
        # - fromFieldPath: spec.namespace
        #   toFieldPath: spec.forProvider.values.services.hosts.provider
        #   transforms:
        #     - type: string
        #       string:
        #         fmt: "http://provider-service-service.%s.svc"
        # - fromFieldPath: spec.namespace
        #   toFieldPath: spec.forProvider.values.services.hosts.capi
        #   transforms:
        #     - type: string
        #       string:
        #         fmt: "http://capi-service-service.%s.svc"

        - fromFieldPath: spec.title
          toFieldPath: spec.forProvider.values.title
        - fromFieldPath: spec.protocol
          toFieldPath: spec.forProvider.values.schema
        - fromFieldPath: spec.domain
          toFieldPath: spec.forProvider.values.domain.base
        - fromFieldPath: spec.api.hostname
          toFieldPath: spec.forProvider.values.domain.api
        - fromFieldPath: spec.app.hostname
          toFieldPath: spec.forProvider.values.domain.app
    - base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: Release
        metadata:
          annotations:
            crossplane.io/external-name: app
        spec:
          forProvider:
            chart:
              name: app
              repository: https://charts.krateo.io
              version: 1.2.16
            namespace: krateo-system
            values:
              fullnameOverride: app
      patches:
        - fromFieldPath: spec.app.version
          toFieldPath: spec.forProvider.chart.version
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-release-app"
        - fromFieldPath: metadata.name
          toFieldPath: spec.providerConfigRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-provider-helm-pc-in"
        # - type: CombineFromComposite
        #   combine:
        #     variables:
        #       - fromFieldPath: spec.protocol
        #       - fromFieldPath: spec.api.hostname
        #       - fromFieldPath: spec.domain
        #       - fromFieldPath: spec.domainPort
        #     strategy: string
        #     string:
        #       fmt: "%s://%s.%s:%d"
        #   toFieldPath: spec.forProvider.values.uris.api
        # - type: CombineFromComposite
        #   combine:
        #     variables:
        #       - fromFieldPath: spec.protocol
        #       - fromFieldPath: spec.socket-service.hostname
        #       - fromFieldPath: spec.domain
        #       - fromFieldPath: spec.domainPort
        #     strategy: string
        #     string:
        #       fmt: "%s://%s.%s:%d"
        #   toFieldPath: spec.forProvider.values.uris.socket
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: spec.app.hostname
              - fromFieldPath: spec.domain
            strategy: string
            string:
              fmt: "%s.%s"
          toFieldPath: spec.forProvider.values.ingress.host
        - fromFieldPath: spec.app.ingress
          toFieldPath: spec.forProvider.values.ingress
        - fromFieldPath: spec.namespace
          toFieldPath: spec.forProvider.namespace
    - base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: Release
        metadata:
          annotations:
            crossplane.io/external-name: argocd
        spec:
          forProvider:
            chart:
              name: argocd-service
              repository: https://charts.krateo.io
              version: 1.0.6
            namespace: krateo-system
      patches:
        - fromFieldPath: spec.argocd-service.version
          toFieldPath: spec.forProvider.chart.version
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-release-argocd-service"
        - fromFieldPath: metadata.name
          toFieldPath: spec.providerConfigRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-provider-helm-pc-in"
        - fromFieldPath: spec.namespace
          toFieldPath: spec.forProvider.namespace
    - base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: Release
        metadata:
          annotations:
            crossplane.io/external-name: auth
        spec:
          forProvider:
            chart:
              name: auth-service
              repository: https://charts.krateo.io
              version: 1.1.11
            namespace: krateo-system
      patches:
        - fromFieldPath: spec.auth-service.version
          toFieldPath: spec.forProvider.chart.version
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-release-auth-service"
        - fromFieldPath: metadata.name
          toFieldPath: spec.providerConfigRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-provider-helm-pc-in"
        - fromFieldPath: spec.namespace
          toFieldPath: spec.forProvider.namespace
    - base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: Release
        metadata:
          annotations:
            crossplane.io/external-name: krateo-crds
        spec:
          forProvider:
            chart:
              name: krateo-crds
              repository: https://charts.krateo.io
              version: 0.3.8
            namespace: krateo-system
      patches:
        - fromFieldPath: spec.krateo-crds.version
          toFieldPath: spec.forProvider.chart.version
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-release-krateo-crds"
        - fromFieldPath: metadata.name
          toFieldPath: spec.providerConfigRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-provider-helm-pc-in"
        - fromFieldPath: spec.namespace
          toFieldPath: spec.forProvider.namespace
    - base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: Release
        metadata:
          annotations:
            crossplane.io/external-name: deployment
        spec:
          forProvider:
            chart:
              name: deployment-service
              repository: https://charts.krateo.io
              version: 1.2.16
            namespace: krateo-system
      patches:
        - fromFieldPath: spec.deployment-service.version
          toFieldPath: spec.forProvider.chart.version
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-release-deployment-service"
        - fromFieldPath: metadata.name
          toFieldPath: spec.providerConfigRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-provider-helm-pc-in"
        - fromFieldPath: spec.namespace
          toFieldPath: spec.forProvider.namespace
    - base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: Release
        metadata:
          annotations:
            crossplane.io/external-name: git
        spec:
          forProvider:
            chart:
              name: git-service
              repository: https://charts.krateo.io
              version: 1.0.6
            namespace: krateo-system
      patches:
        - fromFieldPath: spec.git-service.version
          toFieldPath: spec.forProvider.chart.version
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-release-git-service"
        - fromFieldPath: metadata.name
          toFieldPath: spec.providerConfigRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-provider-helm-pc-in"
        - fromFieldPath: spec.namespace
          toFieldPath: spec.forProvider.namespace
    - base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: Release
        metadata:
          annotations:
            crossplane.io/external-name: kubernetes
        spec:
          forProvider:
            chart:
              name: kubernetes-service
              repository: https://charts.krateo.io
              version: 1.1.0
            namespace: krateo-system
      patches:
        - fromFieldPath: spec.kubernetes-service.version
          toFieldPath: spec.forProvider.chart.version
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-release-kubernetes-service"
        - fromFieldPath: metadata.name
          toFieldPath: spec.providerConfigRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-provider-helm-pc-in"
        - fromFieldPath: spec.namespace
          toFieldPath: spec.forProvider.namespace
    - base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: Release
        metadata:
          annotations:
            crossplane.io/external-name: event
        spec:
          forProvider:
            chart:
              name: event-service
              repository: https://charts.krateo.io
              version: 1.1.5
            namespace: krateo-system
      patches:
        - fromFieldPath: spec.event-service.version
          toFieldPath: spec.forProvider.chart.version
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-release-event-service"
        - fromFieldPath: metadata.name
          toFieldPath: spec.providerConfigRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-provider-helm-pc-in"
        - fromFieldPath: spec.namespace
          toFieldPath: spec.forProvider.namespace
    - base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: Release
        metadata:
          annotations:
            crossplane.io/external-name: notification
        spec:
          forProvider:
            chart:
              name: notification-service
              repository: https://charts.krateo.io
              version: 1.1.5
            namespace: krateo-system
      patches:
        - fromFieldPath: spec.notification-service.version
          toFieldPath: spec.forProvider.chart.version
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-release-notification-service"
        - fromFieldPath: metadata.name
          toFieldPath: spec.providerConfigRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-provider-helm-pc-in"
        # - type: CombineFromComposite
        #   combine:
        #     variables:
        #       - fromFieldPath: spec.notification-service.hostname
        #       - fromFieldPath: spec.domain
        #     strategy: string
        #     string:
        #       fmt: "%s.%s"
        #   toFieldPath: spec.forProvider.values.ingress.host
        - fromFieldPath: spec.namespace
          toFieldPath: spec.forProvider.namespace
    - base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: Release
        metadata:
          annotations:
            crossplane.io/external-name: template
        spec:
          forProvider:
            chart:
              name: template-service
              repository: https://charts.krateo.io
              version: 1.2.6
            namespace: krateo-system
      patches:
        - fromFieldPath: spec.template-service.version
          toFieldPath: spec.forProvider.chart.version
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-release-template-service"
        - fromFieldPath: metadata.name
          toFieldPath: spec.providerConfigRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-provider-helm-pc-in"
        - fromFieldPath: spec.namespace
          toFieldPath: spec.forProvider.namespace
    - base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: Release
        metadata:
          annotations:
            crossplane.io/external-name: secret
        spec:
          forProvider:
            chart:
              name: secret-service
              repository: https://charts.krateo.io
              version: 1.1.3
            namespace: krateo-system
      patches:
        - fromFieldPath: spec.secret-service.version
          toFieldPath: spec.forProvider.chart.version
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-release-secret-service"
        - fromFieldPath: metadata.name
          toFieldPath: spec.providerConfigRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-provider-helm-pc-in"
        - fromFieldPath: spec.namespace
          toFieldPath: spec.forProvider.namespace
    - base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: Release
        metadata:
          annotations:
            crossplane.io/external-name: pipeline
        spec:
          forProvider:
            chart:
              name: pipeline-service
              repository: https://charts.krateo.io
              version: 1.1.2
            namespace: krateo-system
      patches:
        - fromFieldPath: spec.pipeline-service.version
          toFieldPath: spec.forProvider.chart.version
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-release-pipeline-service"
        - fromFieldPath: metadata.name
          toFieldPath: spec.providerConfigRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-provider-helm-pc-in"
        - fromFieldPath: spec.namespace
          toFieldPath: spec.forProvider.namespace
    - base:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: ProviderConfig
        spec:
          credentials:
            source: InjectedIdentity
      patches:
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-provider-k8s-pc-in"
      readinessChecks:
        - type: None
    - base:
        apiVersion: core.modules.krateo.io/v1
        kind: kongapigw
        spec:
          kongapigw:
            version: 2.13.1
            # postgresql:
            #   enabled: true
      patches:
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-kongapigw"
        - fromFieldPath: spec.kongapigw
          toFieldPath: spec.kongapigw
        - fromFieldPath: metadata.labels
          toFieldPath: metadata.labels
        - fromFieldPath: spec.platform
          toFieldPath: spec.compositionSelector.matchLabels.platform
        - fromFieldPath: spec.namespace
          toFieldPath: spec.namespace
    - base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: Release
        metadata:
          annotations:
            crossplane.io/external-name: provider
        spec:
          forProvider:
            chart:
              name: provider-service
              repository: https://charts.krateo.io
              version: 1.0.7
            namespace: krateo-system
      patches:
        - fromFieldPath: spec.provider-service.version
          toFieldPath: spec.forProvider.chart.version
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-release-provider-service"
        - fromFieldPath: metadata.name
          toFieldPath: spec.providerConfigRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-provider-helm-pc-in"
        - fromFieldPath: spec.namespace
          toFieldPath: spec.forProvider.namespace
    - base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: Release
        metadata:
          annotations:
            crossplane.io/external-name: component
        spec:
          forProvider:
            chart:
              name: component-service
              repository: https://charts.krateo.io
              version: 0.2.1
            namespace: krateo-system
      patches:
        - fromFieldPath: spec.component-service.version
          toFieldPath: spec.forProvider.chart.version
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-release-component-service"
        - fromFieldPath: metadata.name
          toFieldPath: spec.providerConfigRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-provider-helm-pc-in"
        - fromFieldPath: spec.namespace
          toFieldPath: spec.forProvider.namespace
    - base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: Release
        metadata:
          annotations:
            crossplane.io/external-name: eventrouter
        spec:
          forProvider:
            chart:
              name: eventrouter
              repository: https://charts.krateo.io
              version: 0.3.1
            namespace: krateo-system
      patches:
        - fromFieldPath: spec.eventrouter.version
          toFieldPath: spec.forProvider.chart.version
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-release-eventrouter"
        - fromFieldPath: metadata.name
          toFieldPath: spec.providerConfigRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-provider-helm-pc-in"
        - fromFieldPath: spec.namespace
          toFieldPath: spec.forProvider.namespace
    - base:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: ProviderConfig
        spec:
          credentials:
            source: InjectedIdentity
      patches:
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-provider-k8s-pc-in"
      readinessChecks:
        - type: None
    - base:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        spec:
          forProvider:
            manifest:
              apiVersion: eventrouter.krateo.io/v1alpha1
              kind: Registration
              metadata:
                name: event-service-registration
              spec:
                serviceName: event-service
                endpoint: http://event-service.krateo-system.svc
      patches:
        - fromFieldPath: "metadata.name"
          toFieldPath: "metadata.name"
          transforms:
            - type: string
              string:
                fmt: "%s-event-service-registration-object"
        - fromFieldPath: metadata.name
          toFieldPath: spec.providerConfigRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-provider-k8s-pc-in"
        - fromFieldPath: "spec.namespace"
          toFieldPath: "spec.forProvider.manifest.metadata.namespace"
